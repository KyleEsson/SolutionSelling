@using Microsoft.AspNetCore.Identity
@using SolutionSelling.Areas.Identity.Data

@inject SignInManager<SolutionSellingUser> SignInManager
@inject UserManager<SolutionSellingUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    var userFirstName = user?.FirstName;
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><b>Hello @userFirstName</b></a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("ItemsForSale", "Items", new { area = "" })">
                <button id="logout" type="submit" class="btn btn-danger">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="btn btn-primary" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li>
            <p>&nbsp;</p>
    </li>
    <li class="nav-item">
            <a class="btn btn-primary" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
